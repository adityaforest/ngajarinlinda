// Code generated by go-swagger; DO NOT EDIT.

package mantan

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"context"
	"net/http"

	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetAllMantanHandlerFunc turns a function with the right signature into a get all mantan handler
type GetAllMantanHandlerFunc func(GetAllMantanParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetAllMantanHandlerFunc) Handle(params GetAllMantanParams) middleware.Responder {
	return fn(params)
}

// GetAllMantanHandler interface for that can handle valid get all mantan params
type GetAllMantanHandler interface {
	Handle(GetAllMantanParams) middleware.Responder
}

// NewGetAllMantan creates a new http.Handler for the get all mantan operation
func NewGetAllMantan(ctx *middleware.Context, handler GetAllMantanHandler) *GetAllMantan {
	return &GetAllMantan{Context: ctx, Handler: handler}
}

/*
	GetAllMantan swagger:route GET /api/v1/mantan mantan getAllMantan

ngelist semua mantan

ngelist semua mantan haha
*/
type GetAllMantan struct {
	Context *middleware.Context
	Handler GetAllMantanHandler
}

func (o *GetAllMantan) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetAllMantanParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}

// GetAllMantanInternalServerErrorBody get all mantan internal server error body
//
// swagger:model GetAllMantanInternalServerErrorBody
type GetAllMantanInternalServerErrorBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this get all mantan internal server error body
func (o *GetAllMantanInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get all mantan internal server error body based on context it is used
func (o *GetAllMantanInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetAllMantanInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAllMantanInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res GetAllMantanInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
